{"version":3,"sources":["components/Item.js","components/Button.js","components/List.js","App.js","index.js"],"names":["Item","num","prize","active","className","name","Button","handleLottery","onClick","List","list","map","item","index","App","lotteryIndex","useState","prizePool","setPrizePool","stone","setStone","lotteryList","setLotteryList","setActive","loaded","setLoaded","isLottery","setIsLottery","useEffect","axios","get","then","res","data","console","log","alert","move","i","circleRun","setInterval","clearInterval","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.704c0aa2.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../index.css';\r\n\r\nconst Item = ({ num, prize, active }) => {\r\n\treturn (\r\n\t\t<div className={num === active ? 'item itemActivate' : 'item'}>\r\n\t\t\t{prize.name}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Item\r\n","import React from 'react'\r\n\r\nconst Button = ({ handleLottery }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button onClick={handleLottery} className=\"lottery-btn\">\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\n\r\nconst List = ({ list }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{list.map((item, index) => { return <li key={index}>{item.name}</li> })}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default List\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Item from \"./components/Item\";\r\nimport Button from \"./components/Button\";\r\nimport List from \"./components/List\";\r\nimport \"./App.css\";\r\nconst baseUrl = \"/prizePool\";\r\nconst getPrize = \"/prizeResult\";\r\n\r\nconst App = () => {\r\n  const [prizePool, setPrizePool] = useState([]);\r\n  const [stone, setStone] = useState(750);\r\n  const [lotteryList, setLotteryList] = useState([]);\r\n  const [active, setActive] = useState(null);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [isLottery, setIsLottery] = useState(false);\r\n  // const [lotteryIndex, setLotteryIndex] = useState(null);\r\n  let lotteryIndex;\r\n  const getAll = () => {\r\n    axios.get(baseUrl).then((res) => {\r\n      setPrizePool(res.data);\r\n      console.log(res.data);\r\n      setLoaded(true);\r\n    });\r\n  };\r\n  const getResult = () => {\r\n    return axios.get(getPrize);\r\n  };\r\n  useEffect(getAll, []);\r\n\r\n  const handleLottery = () => {\r\n    if (isLottery) {\r\n      return;\r\n    }\r\n    setIsLottery(true);\r\n\r\n    if (stone < 200) {\r\n      alert(\"矿石不足\");\r\n      return;\r\n    }\r\n    //抽奖过程\r\n    setStone(stone - 200);\r\n    //获取后端抽奖结果\r\n    getResult()\r\n      .then((res) => {\r\n        let { index } = res.data;\r\n        // console.log(\"res.data:\", index);\r\n        lotteryIndex = index;\r\n        console.log(\"lo\", lotteryIndex);\r\n        // getData = true;\r\n      })\r\n      .then(() => {\r\n        console.log(\"l\", lotteryIndex);\r\n        const move = lotteryIndex + 9 * 2;\r\n        let i = 1;\r\n        let circleRun = setInterval(() => {\r\n          if (i <= move) {\r\n            setActive((i + 1) % 9);\r\n            i++;\r\n          } else {\r\n            clearInterval(circleRun);\r\n            console.log(\"prize:\", prizePool[lotteryIndex]);\r\n            setLotteryList([...lotteryList, prizePool[lotteryIndex]]);\r\n            console.log(\"lotteryList:\", lotteryList);\r\n            setIsLottery(false);\r\n            if (lotteryIndex === 1) {\r\n              setStone(stone + 66);\r\n            }\r\n          }\r\n        }, 150);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"bg\">\r\n        {loaded ? (\r\n          <div className=\"board\">\r\n            <div className=\"boardContainer\">\r\n              <div className=\"row\">\r\n                <div>\r\n                  <Item num={1} prize={prizePool[0]} active={active} />\r\n                </div>\r\n                <div>\r\n                  <Item num={2} prize={prizePool[1]} active={active} />\r\n                </div>\r\n                <div>\r\n                  <Item num={3} prize={prizePool[2]} active={active} />\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div>\r\n                  <Item num={8} prize={prizePool[7]} active={active} />\r\n                </div>\r\n                <div>\r\n                  <Button handleLottery={handleLottery} />\r\n                </div>\r\n                <div>\r\n                  <Item num={4} prize={prizePool[3]} active={active} />\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div>\r\n                  <Item num={7} prize={prizePool[6]} active={active} />\r\n                </div>\r\n                <div>\r\n                  <Item num={6} prize={prizePool[5]} active={active} />\r\n                </div>\r\n                <div>\r\n                  <Item num={5} prize={prizePool[4]} active={active} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"remind-text\">\r\n              当前矿石数：{stone}\r\n              <div>200矿石/次</div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"loading\">加载数据...</div>\r\n        )}\r\n      </div>\r\n      <div className=\"lottery-list\">\r\n        <div className=\"list-head\">获奖记录</div>\r\n        <ul>\r\n          <List list={lotteryList} />\r\n        </ul>\r\n        {/* <div>active:{active}</div> */}\r\n        {/* <div>lotteryIndex:{lotteryIndex}</div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}